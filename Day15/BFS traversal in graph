#include <bits/stdc++.h> 
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
vector<int> ans;

     if(edges.size()==0){

       for(int i=0;i<vertex;i++){
             ans.push_back(i);
         }
         return ans;
     }

    vector<set<int>> adj(vertex);
    for (auto it : edges) {
      int u = it.first;
      int v = it.second;
      adj[u].insert(v);
      adj[v].insert(u);
    }
    int vis[vertex] = {0};

    queue<int> q; 
    q.push(0);
    vis[0]=1;


    while (!q.empty()) {

      int node = q.front();
       q.pop();
       ans.push_back(node);
       for(auto it:adj[node]){
           if(!vis[it]){
               vis[it]=1;     
               q.push(it);
           }
       }
    
    
    }
    for(int i=0;i<vertex;i++){
      if (!vis[i]) {
        ans.push_back(i);
      }
    }
 return ans;
    // Write your code here
}
