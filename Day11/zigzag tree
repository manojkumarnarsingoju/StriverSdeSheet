#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{

queue<BinaryTreeNode<int>*> q;
q.push(root);
vector<int> ans;
if(root==NULL){
    return ans;
}
bool lefttoright = false;
while(!q.empty()){
int size = q.size();
vector<int> level;
for(int i=0;i<size;i++){
    BinaryTreeNode<int> * curr = q.front();
    level.push_back(curr->data);
    q.pop();
    if(curr->left){
        q.push(curr->left);
    }
    if(curr->right){
        q.push(curr->right);
    }

}
 if(lefttoright){
     reverse(level.begin(),level.end());
 }


lefttoright = !lefttoright;
for (auto it : level) {
  ans.push_back(it);
}

}
return ans;
    // Write your code here!
}
